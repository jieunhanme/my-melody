$text--light: black;
$text--dark: white;
$bg--light: #ededed;
$bg--dark: #363636;

// SECTION Neumorphism Button Color
$btn--light--shadow--start: #d8d8d8;
$btn--light--shadow--end: #ffffff;
$btn--light--hover--start: #d5d5d5;
$btn--light--hover--end: #fefefe;
$btn--dark--shadow--start: #212121;
$btn--dark--shadow--end: #4b4b4b;
$btn--dark--hover--start: #313131;
$btn--dark--hover--end: #3a3a3a;
// !SECTION

// SECTION Theme
$themes: (
  light: (
    bg: $bg--light,
    text: $text--light,
    shadow-start: $btn--light--shadow--start,
    shadow-end: $btn--light--shadow--end,
    hover-start: $btn--light--hover--start,
    hover-end: $btn--light--hover--end,
  ),
  dark: (
    bg: $bg--dark,
    text: $text--dark,
    shadow-start: $btn--dark--shadow--start,
    shadow-end: $btn--dark--shadow--end,
    hover-start: $btn--dark--hover--start,
    hover-end: $btn--dark--hover--end,
  ),
);

@mixin themed() {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
// !SECTION Theme

@mixin transition($x...) {
  -webkit-transition: $x;
  -moz-transition: $x;
  -ms-transition: $x;
  -o-transition: $x;
  transition: $x;
}

// NOTE 뉴모피즘 효과
@mixin neumorphismButton($radius) {
  display: flex;
  align-items: center;
  align-content: center;

  padding: 10px;

  border-radius: $radius;
  cursor: pointer;

  @include themed() {
    background: t("bg");
    color: t("text");
    box-shadow: 10px 10px 20px t("shadow-start"),
      -10px -10px 20px t("shadow-end");

    position: relative;
    z-index: 100;
    &:before {
      background-image: linear-gradient(
        145deg,
        t("hover-start"),
        t("hover-end")
      );
      content: "";
      border-radius: $radius;
      display: block;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      z-index: -100;
      @include transition(opacity 0.2s);
    }
    &:hover {
      box-shadow: 10px 10px 20px t("shadow-start"),
        -10px -10px 20px t("shadow-end");
      border-radius: $radius;
      &:before {
        opacity: 1;
      }
    }
  }

  @include transition(color 0.6s, background-color 0.6s, box-shadow 0.6s);
}
